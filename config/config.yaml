# benchmark_repeat: number of times a rule will be repeated for a particular
# sample for benchmarking purposes. Set to 1 for a normal (non-benchmarking) run.
benchmark_repeat: 1

merge_structure:
  MERGE_Mock:
    - 1k_Mock_1
    - 10k_Mock_1
    - 100k_Mock_1
    - 1M_Mock_1
    - 10M_Mock_1

# Settings for email alerts
email_address: "skubi@ohsu.edu"
email_subject_error: "[Snakemake Alert] Failure"
email_body_error: "An error occurred in the EZH2 Knockout pipeline."
email_subject_success: "[Snakemake Alert] Success"
email_body_success: "The EZH2 Knockout pipeline has completed successfully."

# Reference genome information
# Assembly header is used by pairtools parse
# genomeID is used to get chromosome sizes by juicer_tools pre; a chromosome sizes file can be substituted.
# genome_prefix is the stem of the reference genome filename and indexes generated by bwa index.
# assembly_urls lists locations to download appropriate ***NO-ALTS*** reference genomes if they're not already in/linked in ./resources
assembly_header: "hg38"
genomeID: "hg38"
genome_prefix: "resources/hg38_noalts"
assembly_urls:
  hg38: "ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/001/405/GCA_000001405.15_GRCh38/seqs_for_alignment_pipelines.ucsc_ids/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.gz"

# From juicer tools pre documentation (https://github.com/aidenlab/juicer/wiki/Pre#restriction-site-file-format)
# IMPORTANT NOTE pre (intentionally) throws away reads that map to the same restriction fragment.
restriction_site_file:
  juicer_tools_pre: "resources/hg38_Arima.txt"
  bed_format: "resources/hg38_Arima.bed"

# location of chromsizes file, used by pairtools parse
chromsizes: "resources/hg38.noalt.sizes"

# location of juicer_tools .jar
juicer_tools_jar: "/home/groups/ravnica/src/juicer/juicer_tools_1.22.01.jar"

# min mapq to filter in pairtools parse and juicer_tools pre
pairtools_parse_min_mapq: "--min-mapq 10"
bwa_mem_min_mapq: "-T 10"

# downsampling strategies. Valid options are numbers from 0-1 (uniform downsampling to that fraction of reads) and "min",
# which calculates the minimum total_mapped statistic from pairtools parse across all replicates, then downsamples each
# replicate by the fraction [min total_mapped]/[cur total_mapped]. Conceptually this is meant to downsample all replicates to
# roughly the same size.
downsample:
  - min

# resolutions/bin sizes to use in .hic/.mcool files
resolutions:
  - 1000
  - 2000
  - 5000
  - 10000
  - 25000
  - 50000
  - 100000
  - 250000
  - 500000
  - 1000000
  - 2500000
  - 5000000
  - 10000000

# Normalizations to compute with juicer_tools.
# Options: VC, VC_SQRT, KR,SCALE, GW_KR, GW_SCALE, GW_VC, INTER_KR, INTER_SCALE, INTER_VC
normalizations:
  - VC
  - VC_SQRT
  - KR
  - SCALE

hicrep:
  binSize: "--binSize 250000"
  h: "--h 1"
  dBPMax: "--dBPMax 5000000"
  bDownSample: ""
  chrNames: "--chrNames chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22 chrX chrY"
  excludeChr: ""

mustache:
  # resolution, distance: Can use 'kb' or 'mb' suffix, in which case mustache will use the first number multiplied by 1000 or 1000000 respectively
  resolution: "--resolution 10kb"
  distance: "--distance 100kb"
  chromosomes: "--chromosome 1 2 3"
  pThreshold: "--pThreshold 0.05"
  sigmaZero: ""
  sparsityThreshold: "--sparsityThreshold 0.88"
  normalization: "--normalization VC_SQRT"
  filename_suffix: "mustache"

diff_mustache:
  # resolution, distance: Can use 'kb' or 'mb' suffix, in which case mustache will use the first number multiplied by 1000 or 1000000 respectively
  resolution: "--resolution 10kb"
  distance: "--distance 100kb"
  chromosomes: "--chromosome 1 2 3"
  pThreshold: "--pThreshold 0.05"
  sigmaZero: ""
  sparsityThreshold: "--sparsityThreshold 0.88"
  normalization: "--normalization VC_SQRT"
  filename_suffix: "diff_mustache"
